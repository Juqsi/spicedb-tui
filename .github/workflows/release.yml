name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install semantic-release
        run: npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github

      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          semantic-release

  build:
    name: Build binaries
    needs: release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download release version
        run: |
          git fetch --tags
          tag=$(git describe --tags --abbrev=0)
          echo "RELEASE_VERSION=${tag#v}" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build
        run: |
          export CGO_ENABLED=0
          export GOOS=${{ matrix.goos }}
          export GOARCH=${{ matrix.goarch }}
          out_name=spicui
          [ "${{ matrix.goos }}" = "windows" ] && out_name=spicui.exe
          go build -ldflags "-X main.Version=${RELEASE_VERSION}" -o $out_name

      - name: Upload binary to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: spicui*
          tag: ${{ env.RELEASE_VERSION }}
          overwrite: true
          file_glob: true
